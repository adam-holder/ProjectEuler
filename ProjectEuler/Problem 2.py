##Project Euler Problem 2: Even Fibonacci Numbers
##
##Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
##
##1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
##
##By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


#fib is a function to find the fibonacci number at the nth position (starting at 0). 
#Case 1 (n = 0): F0 = 0
#Case 2 (n = 1): F1 = 1
#Case 3 (n > 1): Fn = Fn-2 + Fn-1
#Fn+1 = Fn-1 + Fn
def fib(n):
    if (n == 0) or (n == 1):
        return n
    else:
        return fib(n-2)+fib(n-1)

##Test code to print first 20 Fibonacci numbers
##Fiblist = []
##for i in range(20):
##    Fiblist.append(fib(i))
##print (Fiblist)


#Creates a list to hold all the Even Fibonacci Values
EvenValueFiblist = []
#This loops starts at the 3th Fibonacci Number (or n = 2) per the question guidelines. It looks for the Fibonacci Number at the nth position. If fib(n) is bigger than 4,000,000, we exit the loop. If fib(n) is below 4,000,000, we check to see if fib(n) is even. If it is even, we add it to the EvenValueFiblist list and continue with the next n value. Each successful value is printed out with the n-value. When we exit the loop, we sum every value in EvenValueFiblist and display the answer to the question.

for n in range(2,40):
    if fib(n)>4000000:
        print("The Fibonacci value at n = " + str(n) + " is too big. Ending loop.")
        break
    if fib(n) % 2 == 0:
        print (str(fib(n)) + " at n value " + str(n))
        EvenValueFiblist.append(fib(n))
print("The sum of all the even Fibonacci numbers starting at 2 is " + str(sum(EvenValueFiblist)))
    
#SOLUTION: The sum of all the even Fibonacci numbers starting at 2 is 4613732
