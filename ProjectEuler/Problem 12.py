# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
def triangleNumbers(factorCheck):
    triangleNum = 1
    triangleTotal = 0
    factorLen = 0
    loadingCheck = 50
    while (factorLen<factorCheck):
        triangleTotal = triangleNum+triangleTotal
        factors = factorNum(triangleTotal)
        factorLen = len(factors)
        triangleNum+=1
        if factorLen >= factorCheck:
            print(f'{triangleTotal}: {factors}')


def factorNum(n):
    factors = []
    if len(factors) == 0:
        factors.append(n)
    for num in range(int(n/2),0,-1):
        if n % num == 0:
            factors.append(num)
    return factors

# triangleNumbers()
